#pragma once
#include <cstdint>
#include <string>
#include <filesystem>

namespace erl {
struct ThreadInfo {
  std::uint64_t id;

  [[nodiscard]] bool is_valid() const;

  static ThreadInfo current() noexcept;

  ThreadInfo const& set_name(std::string const& name) const;
  [[nodiscard]] std::string get_name() const;

  ThreadInfo const& set_parent(ThreadInfo parent) const;
  [[nodiscard]] ThreadInfo get_parent() const;
};

inline thread_local ThreadInfo const this_thread{ThreadInfo::current()};

struct Program {
private:
  static std::string& get_name() {
    static std::string name;
    return name;
  }

public:
  static void set_name(std::string_view arg0) {
    if (arg0.empty()) {
      return;
    }
    auto path  = std::filesystem::path(arg0);
    get_name() = path.stem().string();
  }
  static std::string_view name() { return get_name(); }
};
}